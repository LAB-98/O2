/*  CSS Properties https://www.w3schools.com/cssref/index.php
                   https://w3c.github.io/csswg-drafts/css-align/#column-row-gap */
/* :root targets element <html>
Names of properties that are prefixed by -- (e.g.: --example-name) */

:root {
    --blue-color: #0065fc;
    --light-blue-color: #deebff;
    --grey-color: #d9d9d9;
    --grey-background: #f2f2f2;
}

/* scroll-behavior compatibility with macOS ? x tested */
html {
    scroll-behavior: smooth;
}

/* Universal selectorl * cf https://www.geeksforgeeks.org/what-is-the-use-of-asterisk-selector-in-css */

/* This rule styles all elements on the page */
* {
    box-sizing: border-box; /* Set the box sizing to 'border-box' - will include any border and padding, but not the margin.*/
    font-family: "Raleway", sans-serif; /* Set the font family to 'Raleway' with a fallback of 'sans-serif' */
    margin: 0;
    padding: 0;
}

body {
    margin: 0;
    padding: 0;
}

a {
    text-decoration: none;
    color: #000;
}

ul {
    padding: 0;
    list-style: none;
}

/* Creates a container with a width of 90% and a max-width of 1400px, and centers it on the page */
.container {
    width: 90%;
    max-width: 1400px;
    margin: 0 auto;
}

/* Defines a class for blue text color */
.blue-color {
    color: #0065fc;
}

/* Defines the styling for a box with a grey background and rounded corners, with padding */
.parent-box {
    background-color: var(--grey-background);
    border-radius: 20px;
    padding: 45px 40px;
}

/* Defines the styling for h2 elements within .parent-box */
.parent-box h2 {
    font-weight: 700;
    font-size: 22px;
    line-height: 26px;
    margin-bottom: 23px;
}

/* Defines the styling for a card with a white background and rounded corners, with padding */
.card {
    background-color: #fff;
    border-radius: 20px;
    padding: 5px;
}

/* Defines the styling for h3 elements within .card */
.card h3 {
    font-weight: 700;
    font-size: 16px;
    line-height: 19px;
    margin-bottom: 10px;
}

/* Defines the styling for elements with the class .price within .card */
.card .price {
    font-size: 14px;
    line-height: 16px;
    margin-bottom: 10px;
}

/* Defines the styling for elements with the class .score within .card */
.card .score {
    display: flex; /* pour utiliser flexbox */
    flex-direction: row; /* distribue les éléments sur une ligne
                            axe principal(main) = axe horizontal et axe transversal(cross) = vertical */
    align-items: center; /* si je me trompe pas c'est normalement, pour ajuster l'axe x sachant qu'on est sur le main axis */
    column-gap: 2px;
    color: var(--blue-color);
    font-size: 12px;
    margin-bottom: 10px;
}

/* Defines the styling for elements with the class .grey within .card .score */
.card .score i.grey {
    color: var(--grey-background);
}

/* git flexbox https://github.com/mdn/translated-content/blob/main/files/fr/web/css/row-gap/index.md?plain=1 */

header {
    display: flex; /* pour utiliser flexbox*/
    flex-direction: row; /* distribue les éléments sur une ligne
    align-items: center; /* alignment of items along the center of the main axis */
    justify-content: space-between; /* La valeur "space-between" c'est pour qu'il y ait un espace égal entre eux et entre les bords du conteneur.
                                        Par exemple, si vous avez trois éléments contenus dans un conteneur avec "justify-content: space-between",
                                            il y aura un espace égal entre chaque élément et entre l'élément le plus à gauche et le bord gauche du conteneur,
                                                et ausi entre l'élément le plus à droite et le bord droit du conteneur. 
                                                   Pratique pour aligner les éléments de manière à ce qu'ils occupent tout l'espace disponible de manière égale.*/
    margin-bottom: 25px;
}

/* Define the img element within the .logo class of the header 
to have a width of 60px */
header .logo img {
    width: 60px;
}

/* Define the styling for anchor elements within the nav element of the header, including:
font weight of 500 + font size of 16px + line height of 19px 
display as an inline block + padding of 33px 35px 0 + margin bottom of 35px 
transition of all properties with a duration of 0.2 seconds and an ease-in-out timing function */
header nav a {
    font-weight: 500;
    font-size: 16px;
    line-height: 19px;
    display: inline-block;
    padding: 33px 35px 0;
    margin-bottom: 35px;
    transition: all 0.2s ease-in-out;
}

/* Define the styles for a link element within a nav element within a header element, when the link is being hovered over */

header nav a:hover {
    color: var(--blue-color); /* custom blue color specified  */
    border-top-color: var(--blue-color); /* custom blue color specified  */
}

header nav a:last-of-type {
    padding-right: 20px;
}

/*Use .class .class = .class child of .class cf https://stackoverflow.com/questions/31137422/css-first-child-of-children-with-a-class */

/* Define the styling for h1 elements within .intro-form */
.intro-form h1 {
    font-weight: 700;
    font-size: 22px;
    line-height: 26px;
    margin-bottom: 10px;
}

/* Define the styling for p elements within .intro-form */
.intro-form p {
    line-height: 19px;
    margin-bottom: 20px;
}

/* Define the form element within .intro-form as a flex container with the following properties:
flex direction as row + alignment of items along the center of the main axis + bottom margin of 36px */
.intro-form form {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: 36px;
}

/* We can use an asterisk (*) for intermediate level while selecting an element by:  

grand_parent * grand_child{
           property : value;
 }
  cf https://www.geeksforgeeks.org/what-is-the-use-of-asterisk-selector-in-css/ */

/* Define the .icon class within the form element of .intro-form as follows:
border with a 1px solid grey color defined by a variable + border radius for the top left and bottom left corners set to 15px + background color set to a grey color */
.intro-form form .icon {
    border: 1px solid var(--grey-background);
    border-radius: 15px 0px 0px 15px;
    background-color: var(--grey-background);
}

.intro-form form .icon i {
    padding: 13px 18px;
    line-height: 21px;
}

.intro-form form input {
    border: 1px solid var(--grey-background);
    padding: 13px 17px;
    font-weight: 700;
    font-size: 18px;
    line-height: 21px;
    outline: none;
}

/* Define the styles for an input element with type "text" within a form element with the class "intro-form" */
.intro-form form input[type="search"] {
    min-width: 300px;
}

/* Define the styles for a button element within a form element with the class "intro-form" */
.intro-form form button {
    color: #fff; /* Set the text color to white */
    border-radius: 0 15px 15px 0; /* Set the border radius to 0 on the left side and 15px on the right and bottom sides */
    background-color: var(
        --blue-color
    ); /* Set the background color to a custom blue color specified using a CSS variable */
    border: 1px solid var(--blue-color); /* Set the border color to a custom blue color specified using a CSS variable */
    padding: 13px 17px; /* Set the padding to 13px on the top and bottom and 17px on the left and right */
    font-weight: 700;
    font-size: 18px;
    line-height: 21px;
    outline: none; /* Remove the default outline */
    cursor: pointer; /* Change the cursor to a pointer when hovering over the button */
}

.intro-form form button i {
    display: none;
}

.intro-form .filter-section {
    display: flex;
    flex-direction: row;
    align-items: center;
    column-gap: 36px;
    margin-bottom: 40px;
}

.intro-form .filter-section span {
    font-weight: 700;
    font-size: 18px;
    line-height: 21px;
}

.intro-form .filter-section ul {
    display: flex;
    flex-direction: row;
    align-items: center;
    column-gap: 36px;
}

.intro-form .filter-section ul li {
    display: flex;
    flex-direction: row;
    align-items: center; /* Align the items along the cross-axis */
    column-gap: 10px; /* Set the column gap to 10px */
    border: 2px solid var(--grey-color); /* Set the border to a solid 2px line with a color of --grey-color */
    border-radius: 25px;
    padding: 14px 20px; /* Set the padding to 14px 20px */
    cursor: pointer; /* Set the cursor to 'pointer' */
    font-weight: 700;
    font-size: 17px;
    line-height: 20px;
    transition: all 0.2s ease-in-out; /* Set the transition effect to 'all' with a duration of 0.2s and an easing of 'ease-in-out' 
                                          any change to the element's state will result in a transition effect that applies to all properties, has a duration of 0.2 seconds, and uses the ease-in-out timing function. 
                                          + creates a transition effect that starts slowly, speeds up, and then slows down again at the end. Other common timing functions include linear, ease-in, and ease-out.*/
}

/* There are two other built-in CSS timing functions:

ease-in: slow at the beginning, fast/abrupt at the end
ease-out: fast/abrupt at the beginning, slow at the end
While they make a certain intuitive sense looked at that way, the general “rule” (in quotes) is to use them opposite of how they are named:

ease-in: when things are moving out.
ease-out: when things are moving in.
Think of a knight’s squire. When the knight calls them, they better arrive at a run, and slow down into place. When the knight sends them away, they’d better very quickly get moving out of there. */

.intro-form .filter-section ul li:hover {
    background-color: var(--light-blue-color);
}

.intro-form .filter-section ul li i {
    color: var(--blue-color);
}

.intro-form .plus-section {
    line-height: 19px;
    display: flex;
    flex-direction: row;
    align-items: center;
    column-gap: 11px;
    margin-bottom: 40px;
}

.intro-form .plus-section .icon {
    color: var(--blue-color);
    border: 1px solid var(--grey-color);
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex; /* pour utiliser flexbox */
    align-items: center;
    justify-content: center; /* pour garder tout centrer sur x */
    font-size: 11px;
}

.intro-form .plus-section .icon {
    font-size: 10px;
}

.housing-offers {
    display: flex;
    flex-direction: row;
    column-gap: 40px;
    margin-bottom: 60px;
}

.housing-offers .offers {
    width: 65%;
}

.housing-offers .offers .offers-wrapper {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap; /* the child elements will wrap onto multiple lines if the flex container is not large enough to fit all of the elements on one line */
    gap: 30px;
    margin-bottom: 40px;
}

.housing-offers .offers .offers-wrapper .offer {
    width: calc((100% - 60px) / 3);
}

/* "width" property is used to set the width of the element.
The value "calc((100% - 60px) / 3)" determines the width of the element by subtracting 60 pixels from 100% of the available space and then dividing the result by 3. */

.housing-offers .offers .offers-wrapper .offer img {
    width: 100%;
    border-radius: 20px 20px 0 0;
    max-height: 130px;
    margin-bottom: 10px;
    object-fit: cover;
}

.housing-offers .offers .offers-wrapper .offer .box {
    padding: 0 15px;
}

.housing-offers .offers a.see-more {
    font-weight: 700;
    font-size: 18px;
    line-height: 21px;
}

.housing-offers .popular {
    width: 35%;
}

.housing-offers .popular h2 {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 26px;
}

.housing-offers .popular h2 i {
    color: var(--blue-color);
}

.housing-offers .popular .options-wrapper {
    display: flex;
    flex-direction: column;
    row-gap: 33px;
    height: calc(100% - 45px);
}

/* "display: flex" property is used to set the element with the class "options-wrapper" to be a flex container, which means flex items can be laid out using the flexbox layout model.
"options-wrapper" that is a descendant of an element with the class "popular" that is itself a descendant of an element with the class "housing-offers".
Create a flex container with the class "options-wrapper" and lay out the flex items within it in a column, with the items stacked vertically one above the other. 
"row-gap" property is used to set the space between rows in a multi-row flex layout. In this case, the value of "33px" specifies a gap of 33 pixels between the rows.
"height" property is used to set the height of the element = the value "calc(100% - 45px)" determines the height of the element by subtracting 45 pixels from 100% of the available space.*/

.housing-offers .popular .options-wrapper .option {
    display: flex;
    flex-direction: row;
    column-gap: 15px;
    background-color: #fff;
    border-radius: 20px;
    padding: 5px;
    min-height: calc((100% - 66px) / 3);
    cursor: pointer;
}

.housing-offers .popular .options-wrapper .option img {
    width: 35%;
    border-radius: 20px 0 0 20px;
    object-fit: cover;
}

.housing-offers .popular .options-wrapper .option .info {
    padding: 16px 20px 0 0;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.housing-offers .popular .options-wrapper .option .info .score {
    margin-bottom: 5px;
}

.activities-offers {
    margin-bottom: 60px;
}

.activities-offers h2 {
    font-weight: 700;
    font-size: 22px;
    line-height: 26px;
    margin-bottom: 20px;
}

.activities-offers .activities-wrapper {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    column-gap: 43px;
}

.activities-offers .activities-wrapper .activity {
    width: calc((100% - 129px) / 4);
    filter: drop-shadow(0px 3px 15px rgba(0, 0, 0, 0.1));
    border-radius: 20px;
    overflow: hidden;
    cursor: pointer;
    display: flex;
    flex-direction: column;
}

.activities-offers .activities-wrapper .activity img {
    width: 100%;
    height: 450px;
    object-fit: cover;
}

.activities-offers .activities-wrapper .activity h3 {
    padding: 20px;
    background-color: #fff;
    font-weight: 700;
    font-size: 16px;
    line-height: 19px;
}

footer {
    background-color: var(--grey-background);
    display: flex;
    flex-direction: row;
    column-gap: 20px;
    padding: 45px 70px;
}

footer ul {
    width: calc((100% - 40px) / 3);
    display: flex;
    flex-direction: column;
    row-gap: 12px;
}

footer ul li {
    line-height: 19px;
}

footer ul li.title {
    font-weight: 700;
    font-size: 18px;
    line-height: 21px;
    margin-bottom: 8px;
}


/* Added 01-05-2023 */

@media (max-width: 768px) {
    .container {
        width: 100%;
    }

    header {
        flex-direction: column;
        padding-top: 20px;
    }

    header nav {
        width: 100%;
        display: flex;
        margin-top: 50px;
    }

    header nav a {
        width: 50%;
        padding: 0;
        text-align: center;
        margin-bottom: 0;
        padding-bottom: 20px;
        border-bottom: 2px solid var(--grey-background);
    }

    header nav a:hover {
        border-color: var(--blue-color);
    }

    header nav a:last-of-type {
        padding: 0;
    }

    .intro-form {
        padding: 30px 5% 0;
    }

    .intro-form form {
        width: 100%;
    }

    .intro-form form input[type="text"] {
        width: 73%;
        min-width: auto;
    }

    .intro-form form button {
        padding: 15px 17px;
        border: 1px solid var(--blue-color);
        cursor: pointer;
    }

    .intro-form form button span {
        display: none;
    }

    .intro-form form button i {
        display: flex;
        font-size: 17px;
    }

    .intro-form .filter-section {
        flex-direction: column;
        align-items: flex-start;
        row-gap: 15px;
    }

    .intro-form .filter-section ul {
        flex-wrap: wrap;
        gap: 30px 15px;
    }

    .intro-form .filter-section ul li {
        width: calc((100% - 15px) / 2);
        justify-content: center;
        font-size: 13px;
        padding: 14px 10px;
    }

    .housing-offers {
        flex-direction: column;
        row-gap: 50px;
    }

    .parent-box {
        width: 100% !important; /* !important flag ensures that this value takes precedence over any other width values that might be specified for the element. */
        border-radius: 0 !important; /* sets the border radius of the element to 0, and the !important flag ensures that this value takes precedence over any other border-radius values that might be specified for the element. */
    }

    .housing-offers .offers {
        order: 2;
        background-color: transparent;
        padding: 0 5%;
    }

    .housing-offers .offers .offers-wrapper {
        flex-direction: column;
    }

    .housing-offers .offers .offers-wrapper .offer {
        width: 100%;
        filter: drop-shadow(0px 3px 15px rgba(0, 0, 0, 0.1));
    }

    .housing-offers .offers .offers-wrapper .offer img {
        max-height: 200px;
    }

    .housing-offers .popular {
        order: 1;
        padding: 45px 5%;
    }

    .housing-offers .popular .options-wrapper .option {
        align-items: stretch; /*  the child elements of the element with the class option will stretch to fill the full height of the element */
    }

    .housing-offers .popular .options-wrapper .option img {
        height: 140px;
    }

    .housing-offers .popular .options-wrapper .option .info {
        height: auto;
        padding: 16px 20px 16px 0;
    }

    .activities-offers {
        padding: 0 5%;
    }

    .activities-offers .activities-wrapper {
        flex-direction: column;
        row-gap: 25px;
    }

    .activities-offers .activities-wrapper .activity {
        width: 100%;
    }

    .activities-offers .activities-wrapper .activity img {
        height: 250px;
    }

    footer {
        padding: 45px 5%;
        flex-direction: column;
        row-gap: 40px;
    }

    footer ul {
        width: 100%;
    }
}

@media (min-width: 768px) and (max-width: 992px) {
    header nav a {
        border-top: 2px solid transparent;
    }

    header nav a:hover {
        border-top-color: var(--blue-color);
    }

    .intro-form .filter-section,
    .intro-form .filter-section ul {
        column-gap: 15px;
    }

    .intro-form .filter-section ul li {
        font-size: 15px;
        column-gap: 5px;
        padding: 14px 13px;
    }

    .housing-offers {
        flex-direction: column;
        row-gap: 50px;
    }

    .parent-box {
        width: 100% !important;
    }

    .housing-offers .offers .offers-wrapper .offer img {
        height: 130px;
    }

    .housing-offers .popular .options-wrapper {
        flex-direction: row;
        column-gap: 20px;
    }

    .housing-offers .popular .options-wrapper .option {
        width: calc((100% - 40px) / 3);
        column-gap: 10px;
    }

    /* The "column-gap" property is used to set the space between columns in a multi-column layout.
       In this case, the value of "10px" specifies a gap of 10 pixels between the columns.*/

    .housing-offers .popular .options-wrapper .option img {
        width: 40%;
    }

    .activities-offers .activities-wrapper {
        column-gap: 20px;
    }

    .activities-offers .activities-wrapper .activity {
        width: calc((100% - 60px) / 4);
    }

    .activities-offers .activities-wrapper .activity h3 {
        flex: 1;
    }

    .activities-offers .activities-wrapper .activity img {
        height: 250px;
    }

    .housing-offers .popular .options-wrapper .option .info {
        padding-right: 10px;
    }

    footer {
        padding: 45px 40px;
        font-size: 15px;
    }
}

/* Added 01-05-2023 */
